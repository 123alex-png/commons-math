/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 07 09:44:55 GMT 2025
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.EigenMetamorphicTester;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EigenMetamorphicTester_ESTest extends EigenMetamorphicTester_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      double[] doubleArray1 = new double[3];
      // Undeclared exception!
      try { 
        EigenMetamorphicTester.testReverseMetamorphicRelation(doubleArray0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Secondary diagonal must have length 6
         //
         verifyException("org.apache.commons.math.linear.EigenMetamorphicTester", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[1] = (-1783.65995026);
      doubleArray0[3] = (-2138.577554800097);
      doubleArray0[4] = (-2878.379);
      double[] doubleArray1 = new double[8];
      doubleArray1[1] = 1.0;
      doubleArray1[2] = (-1783.65995026);
      doubleArray1[3] = 1643.1484735249312;
      // Undeclared exception!
      try { 
        EigenMetamorphicTester.testReverseMetamorphicRelation(doubleArray0, doubleArray1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // Exception status mismatch between original and transformed input.
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        EigenMetamorphicTester.testReverseMetamorphicRelation((double[]) null, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.EigenMetamorphicTester", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = 2.2250738585072014E-308;
      // Undeclared exception!
      try { 
        EigenMetamorphicTester.testReverseMetamorphicRelation(doubleArray0, doubleArray1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // Original eigenvalue not preserved in extended matrix.
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      double[] doubleArray1 = new double[6];
      doubleArray1[1] = 4151.74674709408;
      doubleArray1[2] = 4151.74674709408;
      doubleArray1[3] = 4.0;
      // Undeclared exception!
      try { 
        EigenMetamorphicTester.testReverseMetamorphicRelation(doubleArray0, doubleArray1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // Exception status mismatch between original and transformed input.
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      // Undeclared exception!
      try { 
        EigenMetamorphicTester.testReverseMetamorphicRelation(doubleArray0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Secondary diagonal must have length 6
         //
         verifyException("org.apache.commons.math.linear.EigenMetamorphicTester", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      double[] doubleArray1 = new double[1];
      EigenMetamorphicTester.testReverseMetamorphicRelation(doubleArray0, doubleArray1);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EigenMetamorphicTester eigenMetamorphicTester0 = new EigenMetamorphicTester();
  }
}
